//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jan02Proj.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class AddUser
    {
        public int AddUserID { get; set; }
        [Display(Name = "Full Name")]
        [Required(ErrorMessage = "Enter Your FullName")]
        [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Use letters only please")]
        public string FullName { get; set; }
        [Display(Name = "User Name")]
        [Required(ErrorMessage = "Enter Your UserName")]
        public string UserName { get; set; }
        [Display(Name = "Email")]
        [Required(ErrorMessage = "Enter Your Email")]
        [DataType(DataType.EmailAddress)]
        public string Email { get; set; }

        [Display(Name = "Confirm Email")]
        [Required(ErrorMessage = "Confirm Email")]
        [Compare(otherProperty: "Email", ErrorMessage = "Enter Correct Email")]
        [DataType(DataType.EmailAddress)]
        public string ConfirmEmail { get; set; }

        [Display(Name = "Password")]
        [Required(ErrorMessage = "Enter Your Password")]
        [DataType(DataType.Password)]
        public string Password { get; set; }

        [Display(Name = "Confirm Password")]
        [Required(ErrorMessage = "Confirm Password")]
        [Compare(otherProperty: "Password", ErrorMessage = "Enter Correct Password")]
        [DataType(DataType.Password)]
        public string ConfirmPassword { get; set; }

        [Display(Name = "Role")]
        [Required(ErrorMessage = "Enter Role")]
        public string Role { get; set; }

        public Nullable<System.DateTime> CreatedDate { get; set; }
    }
}
================Password Hide And Show======================================

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<input  type="password"  class="form-control pwd">
<input type="button" class="btnShow" value="show"/>
 <script type="text/javascript">
        $(".btnShow").mousedown(function () {
            $(".pwd").attr("type", "text");
        });
        $(".btnShow").on("mouseleave", function () {
            $(".pwd").attr("type", "password");
        });
    </script>

======================Controller===================
 //========================================Dropdown List metod Start===================
        public List<Role> GetRole()
        {
            List<Role> Coutries = db.Roles.ToList();
            return Coutries;
        }
        //========================================Dropdown List metod End===================
         [HttpGet]
        public ActionResult Register()
        {
            ViewBag.Role = new SelectList(GetRole(), "RoleId", "RoleName");
             //------------dropdown list-----------------
            // @Html.DropDownListFor(m => m.Role, ViewBag.Role as SelectList, "---Select List---", new { @class = "form-control" })

            return View();
        }
        [HttpPost]
        public ActionResult Register(AddUser registerModel)
        {
           
            if(ModelState.IsValid)
            {
               // bool IsUserExits = WebSecurity.UserExists(registerModel.UserName);

                var isUserAlreadyExists = db.AddUsers.Any(x => x.UserName == registerModel.UserName);
            if(isUserAlreadyExists)
            {
                  ModelState.AddModelError("UserName", "User Name Alerady Exists");
                  return View(registerModel);
            }
            else
            {
                registerModel.CreatedDate = System.DateTime.Now;
                Session["UserID"] = registerModel.AddUserID.ToString();
                Session["UserName"] = registerModel.UserName.ToString();
                db.AddUsers.Add(registerModel);
                db.SaveChanges();
                return RedirectToAction( "DashBoard");

            }

            }
            return View();
        }
        //===================================End Register Code====================================================================

        //===========================================DashBoard Start==========================================================
        public ActionResult DashBoard()
        {
            if (Session["UserID"] != null)
            {
                return View();
            }
            else
            {
                return RedirectToAction("Register");
            }  
            
        }

        //===========================================DashBoard End==========================================================

 //============================LogIn Start=================================================================

        public ActionResult LogIn()
        {
            
            return View();
        }

        [HttpPost]
        public ActionResult LogIn(AddUser user)
        {
            
                var res = db.AddUsers.Where(x => x.UserName == user.UserName && x.Password == user.Password).FirstOrDefault();           
                if (res != null)
                {
                    Session["UserID"] = user.AddUserID.ToString();
                    Session["UserName"] = user.UserName.ToString();

                    return RedirectToAction("DashBoard");
                }
                else
                {
                    ViewBag.MSG = "Enter Correct Password and Email Id";
                     return RedirectToAction("LogIn");
                }
                
            
            
        }
        //============================LogIn End=================================================================

        //============================Logout Start=================================================================

        public ActionResult LogOut()
        {
            FormsAuthentication.SignOut();
            Session.Clear();
            Session.RemoveAll();
            Session.Abandon(); 
            return RedirectToAction("Register");
        }
        //============================Logout End=================================================================
 ======================DashBoard==========

<h2>DashBoard</h2>
<h3>@Html.ActionLink("Logout", "LogOut", "AddUser")
</h3>
<fieldset >
    

@if(Session["UserName"] != null) { 
    <h3 >
    Welcome @Session["UserName"].ToString()  </h3>
    } 
</fieldset> 
=================================================
