using FullCRUDImplementationWithJquery.Models;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace FullCRUDImplementationWithJquery.Controllers
{
    public class HomeController : Controller
    {
        MVCTutorialEntities db = new MVCTutorialEntities();
        public ActionResult Index()
        {
            List<tblDepartment> DeptList = db.tblDepartments.ToList();
            ViewBag.ListOfDepartment = new SelectList(DeptList, "DepartmentId", "DepartmentName");
            return View();
        }

        public JsonResult GetStudentList()
        {
            List<StudentViewModel> StuList = db.tblStudents.Where(x => x.IsDeleted == false).Select(x => new StudentViewModel
            {
                StudentId = x.StudentId,
                StudentName = x.StudentName,
                Email = x.Email,
                DepartmentName = x.tblDepartment.DepartmentName
            }).ToList();

            return Json(StuList, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetStudentById(int StudentId)
        {
            tblStudent model = db.tblStudents.Where(x => x.StudentId == StudentId).SingleOrDefault();
            string value = string.Empty;
            value = JsonConvert.SerializeObject(model, Formatting.Indented, new JsonSerializerSettings
            {
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore
            });
            return Json(value, JsonRequestBehavior.AllowGet);
        }

        public JsonResult SaveDataInDatabase(StudentViewModel model)
        {
            var result = false;
            try
            {
                if (model.StudentId > 0)
                {
                    tblStudent Stu = db.tblStudents.SingleOrDefault(x => x.IsDeleted == false && x.StudentId == model.StudentId);
                    Stu.StudentName = model.StudentName;
                    Stu.Email = model.Email;
                    Stu.DepartmentId = model.DepartmentId;
                    db.SaveChanges();
                    result = true;
                }
                else
                {
                    tblStudent Stu = new tblStudent();
                    Stu.StudentName = model.StudentName;
                    Stu.Email = model.Email;
                    Stu.DepartmentId = model.DepartmentId;
                    Stu.IsDeleted = false;
                    db.tblStudents.Add(Stu);
                    db.SaveChanges();
                    result = true;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return Json(result, JsonRequestBehavior.AllowGet);
        }

        public JsonResult DeleteStudentRecord(int StudentId)
        {
            bool result = false;
            tblStudent Stu = db.tblStudents.SingleOrDefault(x => x.IsDeleted == false && x.StudentId == StudentId);
            if (Stu != null)
            {
                Stu.IsDeleted = true;
                db.SaveChanges();
                result = true;
            }

            return Json(result, JsonRequestBehavior.AllowGet);
        }
    }
}
=========================================================

@model Crud_Edmxx.WorkExperience

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>




<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<div class="container" style="margin-top:3%">
    <a href="#" class="btn btn-info" onclick="AddNewStudent(0)">Add New Student</a> <br /><br />

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Student ID</th>
                <th>Company Name</th>
                <th>Title</th>
                <th>Country</th>
                <th>FromYear</th>
                <th>ToYear</th>
                <th>Description</th>
                <th>IdPers</th>
                <td>Edit</td>
                <td>Delete</td>


            </tr>
        </thead>

        <tbody id="SetStudentList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>

    </table>

    @*Create A Popup Modal With Registration Form For Add Or Edit Student Record*@

    <div class="modal fade" id="MyModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4 id="ModalTitle"></h4>
                </div>
                <div class="modal-body">
                    <form id="form">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(model => model.IDExp, new { @id = "IDExp" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.FromYear, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FromYear, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.ToYear, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ToYear, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.IdPers, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IdPers, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <a href="#" class="btn btn-block btn-danger" id="SaveStudentRecord">Save</a>
                            </div>

                            </fieldset>
                            </form>
                        </div>
                        </div>
                        </div>
        </div>

                        @*Create A PopUp Modal For DeleteConfirmation*@

                        <div class="modal fade" id="DeleteConfirmation">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                                        <h4>Delete Student Record</h4>
                                    </div>
                                    <div class="modal-body">
                                        <h4>Are You Sure? You Want To Delete This Record.</h4>
                                    </div>
                                    <div class="modal-footer">
                                        <a href="#" class="btn btn-primary" data-dismiss="modal" id="r">Cancle</a>
                                        <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*Create A PopUp Modal For DeleteConfirmation*@

 <script>
    $("#LoadingStatus").html("Loading....");
    $.get("/Crud/GetStudentList", null, DataBind);
    function DataBind(StudentList) {
        var SetData = $("#SetStudentList");
        for (var i = 0; i < StudentList.length; i++) {
            var Data = "<tr class='row_" + StudentList[i].StudentId + "'>" +
                "<td>" + StudentList[i].IDExp + "</td>" +
                "<td>" + StudentList[i].Company + "</td>" +
                "<td>" + StudentList[i].Title + "</td>" +
                "<td>" + StudentList[i].Country + "</td>" +
                "<td>" + StudentList[i].FromYear + "</td>" +
                "<td>" + StudentList[i].ToYear + "</td>" +
                "<td>" + StudentList[i].Description + "</td>" +
                "<td>" + StudentList[i].IdPers + "</td>" +
                "<td>" + "<a href='#' class='btn btn-warning' onclick='EditStudentRecord(" + StudentList[i].IDExp + ")' ><span class='glyphicon glyphicon-edit'></span></a>" + "</td>" +
                "<td>" + "<a href='#' class='btn btn-danger' onclick='DeleteStudentRecord(" + StudentList[i].IDExp + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
                "</tr>";
            SetData.append(Data);
            $("#LoadingStatus").html(" ");

        }
    }

    //Show The Popup Modal For Add New Student

    function AddNewStudent(StudentId) {
        $("#form")[0].reset();
        $("#IDExp").val(0);
        //$("#DropDwn option:selected").text("--Select Dept--");
        $("#ModalTitle").html("Add New Student");
        $("#MyModal").modal();

    }

    //Show The Popup Modal For Edit Student Record

    function EditStudentRecord(StudentId) {
        var url = "/Crud/GetStudentById?StudentId=" + StudentId;
        $("#ModalTitle").html("Update Student Record");
        $("#MyModal").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#IDExp").val(obj.IDExp);
                $("#Company").val(obj.Company);
                $("#Country").val(obj.Country);
                $("#FromYear").val(obj.FromYear);
                $("#ToYear").val(obj.ToYear);
                $("#Description").val(obj.Description);
                $("#IdPers").val(obj.IdPers);
                
                

            }
        })
    }

    $("#SaveStudentRecord").click(function () {
        var data = $("#SubmitForm").serialize();
        $.ajax({
            type: "Post",
            url: "/Crud/SaveDataInDatabase",
            data: data,
            success: function (result) {
                alert("Success!..");
                window.location.href = "/Crud/Crud";
                $("#MyModal").modal("hide");

            }
        })
    })

    //Show The Popup Modal For DeleteComfirmation
    var DeleteStudentRecord = function (StudentId) {
        $("#IDExp").val(StudentId);
        $("#DeleteConfirmation").modal("show");
    }
    var ConfirmDelete = function () {
        var StuId = $("#IDExp").val();
        $.ajax({
            type: "POST",
            url: "/Crud/DeleteStudentRecord?StudentId=" + StuId,
            success: function (result) {
                $("#DeleteConfirmation").modal("hide");
                $(".row_" + StuId).remove();
            }
        })
    }
                        </script>